[
  
    {

      "title"    : "Welcome to Jekyll!",
      "category" : "",
      "date"     : "2021-11-19 14:37:00 +0530",
      "url"      : "/post/welcome-to-jekyll/",
      "description" : "<p>You’ll find this post in your <code class=\"language-plaintext highlighter-rouge\">_posts</code> directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run <code class=\"language-plaintext highlighter-rouge\">jekyll serve</code>, which launches a web server and auto-regenerates your site when a file is updated.</p>\n\n<p>Jekyll requires blog post files to be named according to the following format:</p>\n\n<p><code class=\"language-plaintext highlighter-rouge\">YEAR-MONTH-DAY-title.MARKUP</code></p>\n\n<p>Where <code class=\"language-plaintext highlighter-rouge\">YEAR</code> is a four-digit number, <code class=\"language-plaintext highlighter-rouge\">MONTH</code> and <code class=\"language-plaintext highlighter-rouge\">DAY</code> are both two-digit numbers, and <code class=\"language-plaintext highlighter-rouge\">MARKUP</code> is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.</p>\n\n<p>Jekyll also offers powerful support for code snippets:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-ruby\" data-lang=\"ruby\"><span class=\"k\">def</span> <span class=\"nf\">print_hi</span><span class=\"p\">(</span><span class=\"nb\">name</span><span class=\"p\">)</span>\n  <span class=\"nb\">puts</span> <span class=\"s2\">\"Hi, </span><span class=\"si\">#{</span><span class=\"nb\">name</span><span class=\"si\">}</span><span class=\"s2\">\"</span>\n<span class=\"k\">end</span>\n<span class=\"n\">print_hi</span><span class=\"p\">(</span><span class=\"s1\">'Tom'</span><span class=\"p\">)</span>\n<span class=\"c1\">#=&gt; prints 'Hi, Tom' to STDOUT.</span></code></pre></figure>\n\n<p>Check out the <a href=\"https://jekyllrb.com/docs/home\">Jekyll docs</a> for more info on how to get the most out of Jekyll. File all bugs/feature requests at <a href=\"https://github.com/jekyll/jekyll\">Jekyll’s GitHub repo</a>. If you have questions, you can ask them on <a href=\"https://talk.jekyllrb.com/\">Jekyll Talk</a>.</p>\n\n"
    } ,
  
    {

      "title"    : "Adding BroadCast Mail to All Users Registered inside Django Admin",
      "category" : "",
      "date"     : "2016-04-20 18:21:02 +0530",
      "url"      : "/post/adding-broadcast-mail-to-all-users-registered-inside-django-admin/",
      "description" : "<p>Adding BroadCast Mail to All User Registered in Django Admin. This is my last problem, we need custom default Django Admin to can submit BroadCast mail to All User. Because this is perfectly to make a promotions.</p>\n\n<p>This problem has been helped by our Danny W. Adair who are answered someone’s question about the <a href=\"http://stackoverflow.com/a/5803941/3445802\">“Django Admin Customizing”</a>.</p>\n\n<blockquote>\n  <p>In this configuration, we use gmail for email backend. Please following this tutorial first <a href=\"https://agusmakmun.github.io/python/django/2016/04/18/email-backend-with-smtp-gmail.html\">Email BackEnd with SMTP Gmail</a>.</p>\n</blockquote>\n\n<hr />\n\n<p><strong>1.</strong> In your <code class=\"language-plaintext highlighter-rouge\">models.py</code></p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"k\">class</span> <span class=\"nc\">BroadCast_Email</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"p\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">subject</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"p\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">200</span><span class=\"p\">)</span>\n    <span class=\"n\">created</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"p\">.</span><span class=\"n\">DateTimeField</span><span class=\"p\">(</span><span class=\"n\">default</span><span class=\"o\">=</span><span class=\"n\">timezone</span><span class=\"p\">.</span><span class=\"n\">now</span><span class=\"p\">)</span>\n    <span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"n\">RichTextUploadingField</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">__unicode__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">subject</span>\n\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">verbose_name</span> <span class=\"o\">=</span> <span class=\"s\">\"BroadCast Email to all Member\"</span>\n        <span class=\"n\">verbose_name_plural</span> <span class=\"o\">=</span> <span class=\"s\">\"BroadCast Email\"</span></code></pre></figure>\n\n<hr />\n\n<p><strong>2.</strong> In your <code class=\"language-plaintext highlighter-rouge\">admin.py</code>, importing some module for “admin” and for “email setup”.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-python\" data-lang=\"python\"><span class=\"kn\">from</span> <span class=\"nn\">django.contrib</span> <span class=\"kn\">import</span> <span class=\"n\">admin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.utils.safestring</span> <span class=\"kn\">import</span> <span class=\"n\">mark_safe</span>\n<span class=\"kn\">import</span> <span class=\"nn\">threading</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.conf</span> <span class=\"kn\">import</span> <span class=\"n\">settings</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.http</span> <span class=\"kn\">import</span> <span class=\"n\">HttpResponse</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.core.mail</span> <span class=\"kn\">import</span> <span class=\"p\">(</span><span class=\"n\">send_mail</span><span class=\"p\">,</span> <span class=\"n\">BadHeaderError</span><span class=\"p\">,</span> <span class=\"n\">EmailMessage</span><span class=\"p\">)</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.contrib.auth.models</span> <span class=\"kn\">import</span> <span class=\"n\">User</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">EmailThread</span><span class=\"p\">(</span><span class=\"n\">threading</span><span class=\"p\">.</span><span class=\"n\">Thread</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">subject</span><span class=\"p\">,</span> <span class=\"n\">html_content</span><span class=\"p\">,</span> <span class=\"n\">recipient_list</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">subject</span> <span class=\"o\">=</span> <span class=\"n\">subject</span>\n        <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">recipient_list</span> <span class=\"o\">=</span> <span class=\"n\">recipient_list</span>\n        <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">html_content</span> <span class=\"o\">=</span> <span class=\"n\">html_content</span>\n        <span class=\"n\">threading</span><span class=\"p\">.</span><span class=\"n\">Thread</span><span class=\"p\">.</span><span class=\"n\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">run</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">msg</span> <span class=\"o\">=</span> <span class=\"n\">EmailMessage</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">subject</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">html_content</span><span class=\"p\">,</span> <span class=\"n\">settings</span><span class=\"p\">.</span><span class=\"n\">EMAIL_HOST_USER</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">recipient_list</span><span class=\"p\">)</span>\n        <span class=\"n\">msg</span><span class=\"p\">.</span><span class=\"n\">content_subtype</span> <span class=\"o\">=</span> <span class=\"s\">\"html\"</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">msg</span><span class=\"p\">.</span><span class=\"n\">send</span><span class=\"p\">()</span>\n        <span class=\"k\">except</span> <span class=\"n\">BadHeaderError</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">HttpResponse</span><span class=\"p\">(</span><span class=\"s\">'Invalid header found.'</span><span class=\"p\">)</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">BroadCast_Email_Admin</span><span class=\"p\">(</span><span class=\"n\">admin</span><span class=\"p\">.</span><span class=\"n\">ModelAdmin</span><span class=\"p\">):</span>\n    <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"p\">.</span><span class=\"n\">BroadCast_Email</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">submit_email</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">obj</span><span class=\"p\">):</span> <span class=\"c1\">#`obj` is queryset, so there we only use first selection, exacly obj[0]\n</span>        <span class=\"n\">list_email_user</span> <span class=\"o\">=</span> <span class=\"p\">[</span> <span class=\"n\">p</span><span class=\"p\">.</span><span class=\"n\">email</span> <span class=\"k\">for</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"n\">User</span><span class=\"p\">.</span><span class=\"n\">objects</span><span class=\"p\">.</span><span class=\"nb\">all</span><span class=\"p\">()</span> <span class=\"p\">]</span> <span class=\"c1\">#: if p.email != settings.EMAIL_HOST_USER   #this for exception\n</span>        <span class=\"n\">obj_selected</span> <span class=\"o\">=</span> <span class=\"n\">obj</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n        <span class=\"n\">EmailThread</span><span class=\"p\">(</span><span class=\"n\">obj_selected</span><span class=\"p\">.</span><span class=\"n\">subject</span><span class=\"p\">,</span> <span class=\"n\">mark_safe</span><span class=\"p\">(</span><span class=\"n\">obj_selected</span><span class=\"p\">.</span><span class=\"n\">message</span><span class=\"p\">),</span> <span class=\"n\">list_email_user</span><span class=\"p\">).</span><span class=\"n\">start</span><span class=\"p\">()</span>\n    <span class=\"n\">submit_email</span><span class=\"p\">.</span><span class=\"n\">short_description</span> <span class=\"o\">=</span> <span class=\"s\">'Submit BroadCast (1 Select Only)'</span>\n    <span class=\"n\">submit_email</span><span class=\"p\">.</span><span class=\"n\">allow_tags</span> <span class=\"o\">=</span> <span class=\"bp\">True</span>\n\n    <span class=\"n\">actions</span> <span class=\"o\">=</span> <span class=\"p\">[</span> <span class=\"s\">'submit_email'</span> <span class=\"p\">]</span>\n\n    <span class=\"n\">list_display</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s\">\"subject\"</span><span class=\"p\">,</span> <span class=\"s\">\"created\"</span><span class=\"p\">)</span>\n    <span class=\"n\">search_fields</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s\">'subject'</span><span class=\"p\">,]</span>\n\n<span class=\"n\">admin</span><span class=\"p\">.</span><span class=\"n\">site</span><span class=\"p\">.</span><span class=\"n\">register</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"p\">.</span><span class=\"n\">BroadCast_Email</span><span class=\"p\">,</span> <span class=\"n\">BroadCast_Email_Admin</span><span class=\"p\">)</span></code></pre></figure>\n\n<hr />\n\n<p><strong>3.</strong> And then, you can see. we have <strong>Submit BroadCast</strong> selection, just click button <strong>Go</strong> to submit broadcast mail.</p>\n\n<p><img src=\"https://raw.githubusercontent.com/agusmakmun/agusmakmun.github.io/master/static/img/_posts/Broadcast_Mail.png\" alt=\"Screenshot broadcast\" title=\"Screenshot broadcast\" /></p>\n"
    } ,
  
    {

      "title"    : "Replace backend gmail to Postmarkapp for Django",
      "category" : "",
      "date"     : "2016-04-19 18:45:33 +0530",
      "url"      : "/post/replace-email-backend-gmail-to-postmarkapp-for-django/",
      "description" : "<h4 id=\"1-install-module-of-python-postmark\">1. Install module of Python Postmark</h4>\n\n<p>Install this module manually from souce inside your environtment: <a href=\"https://github.com/themartorana/python-postmark\">https://github.com/themartorana/python-postmark</a></p>\n\n<blockquote>\n  <p>If you work on <code class=\"language-plaintext highlighter-rouge\">Django==1.9.*</code>, requirements only <code class=\"language-plaintext highlighter-rouge\">mock</code>.</p>\n</blockquote>\n\n<h4 id=\"2-register-and-put-the-server-keys\">2. Register and Put the Server Keys</h4>\n\n<p>Register and put your server API token here: https://account.postmarkapp.com/servers/101010/credentials . <code class=\"language-plaintext highlighter-rouge\">101010</code> is id of your server.</p>\n\n<blockquote>\n  <p>Makesure verified your SPF and DKIM. this configurations to allowing the permission from your domain for signature.</p>\n</blockquote>\n\n<h4 id=\"3-configure-in-settingspy\">3. Configure in <code class=\"language-plaintext highlighter-rouge\">settings.py</code></h4>\n\n<figure class=\"highlight\"><pre><code class=\"language-ruby\" data-lang=\"ruby\"><span class=\"no\">EMAIL_USE_TLS</span>        <span class=\"o\">=</span> <span class=\"no\">True</span>\n<span class=\"no\">EMAIL_HOST</span>           <span class=\"o\">=</span> <span class=\"s1\">'smtp.postmarkapp.com'</span>\n<span class=\"no\">EMAIL_PORT</span>           <span class=\"o\">=</span> <span class=\"mi\">587</span>\n<span class=\"no\">POSTMARK_API_KEY</span>     <span class=\"o\">=</span> <span class=\"s1\">'yourkey-yourkey-yourkey-yourkey'</span>\n<span class=\"no\">POSTMARK_SENDER</span>      <span class=\"o\">=</span> <span class=\"s1\">'your_company_email@domain.com'</span>\n<span class=\"no\">EMAIL_HOST_USER</span>      <span class=\"o\">=</span> <span class=\"no\">POSTMARK_SENDER</span>\n<span class=\"no\">DEFAULT_FROM_EMAIL</span>   <span class=\"o\">=</span> <span class=\"no\">POSTMARK_SENDER</span>\n<span class=\"no\">POSTMARK_TEST_MODE</span>   <span class=\"o\">=</span> <span class=\"no\">False</span>\n<span class=\"no\">POSTMARK_TRACK_OPENS</span> <span class=\"o\">=</span> <span class=\"no\">False</span>\n<span class=\"no\">EMAIL_BACKEND</span>        <span class=\"o\">=</span> <span class=\"s1\">'postmark.django_backend.EmailBackend'</span></code></pre></figure>\n"
    } ,
  
    {

      "title"    : "Download recrusive files inside index-of in Linux using wget",
      "category" : "",
      "date"     : "2016-04-19 18:09:02 +0530",
      "url"      : "/post/download-recrusive-files-inside-index-of-in-linux-using-wget/",
      "description" : "<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ wget -r --no-parent --reject \"index.html*\" http://125.160.17.22/dokumen/IGN/Panduan_OpenOffice.org_2.0/\n</code></pre></div></div>\n\n<p>For me I have to pass the –no-parent option, otherwise it will follow the link in the directory index on my site to the parent directory. So the command would look like this:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>wget -r --no-parent http://mysite.com/configs/.vim/\n</code></pre></div></div>\n\n<p>Edit: To avoid downloading the index.html files, use this command:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>wget -r --no-parent --reject \"index.html*\" http://mysite.com/configs/.vim/\n</code></pre></div></div>\n\n<p>The Parameters are:</p>\n\n<ul>\n  <li><code class=\"language-plaintext highlighter-rouge\">-r</code>     //recursive Download</li>\n  <li><code class=\"language-plaintext highlighter-rouge\">--no-parent</code> // Don´t download something from the parent directory</li>\n  <li><code class=\"language-plaintext highlighter-rouge\">-l1</code> //just download the directory (tzivi in your case)</li>\n  <li><code class=\"language-plaintext highlighter-rouge\">-l2</code> //download the directory and all level 1 subfolders (‘tzivi/something’ but not ‘tivizi/somthing/foo’)</li>\n</ul>\n\n<p>And so on. If you insert no <code class=\"language-plaintext highlighter-rouge\">-l</code> option, wget will use <code class=\"language-plaintext highlighter-rouge\">-l</code> 5 automatically.<br />\nIf you insert a -l 0 you´ll download the whole internet, because wget will follow every link it finds.</p>\n\n<p><strong>Refference:</strong></p>\n\n<ul>\n  <li><a href=\"http://stackoverflow.com/a/19695143/3445802\">http://stackoverflow.com/a/19695143/3445802</a></li>\n  <li><a href=\"http://stackoverflow.com/a/273776/3445802\">http://stackoverflow.com/a/273776/3445802</a></li>\n</ul>\n\n"
    } ,
  
    {

      "title"    : "Python Permutations",
      "category" : "",
      "date"     : "2016-04-19 18:01:43 +0530",
      "url"      : "/post/python-permutations/",
      "description" : "<p>This simply how to implement the module of permutations in python.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-ruby\" data-lang=\"ruby\"><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">from</span> <span class=\"n\">itertools</span> <span class=\"n\">import</span> <span class=\"n\">permutations</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">perms</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">''</span><span class=\"p\">.</span><span class=\"nf\">join</span><span class=\"p\">(</span><span class=\"nb\">p</span><span class=\"p\">)</span><span class=\"o\">+</span><span class=\"s2\">\"@gmail.com\"</span> <span class=\"k\">for</span> <span class=\"nb\">p</span> <span class=\"k\">in</span> <span class=\"n\">permutations</span><span class=\"p\">(</span><span class=\"s1\">'abc'</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">for</span> <span class=\"n\">email</span> <span class=\"k\">in</span> <span class=\"ss\">perms:\n</span><span class=\"o\">...</span>     <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">email</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>\n<span class=\"n\">abc</span><span class=\"vi\">@gmail</span><span class=\"p\">.</span><span class=\"nf\">com</span>\n<span class=\"n\">acb</span><span class=\"vi\">@gmail</span><span class=\"p\">.</span><span class=\"nf\">com</span>\n<span class=\"n\">bac</span><span class=\"vi\">@gmail</span><span class=\"p\">.</span><span class=\"nf\">com</span>\n<span class=\"n\">bca</span><span class=\"vi\">@gmail</span><span class=\"p\">.</span><span class=\"nf\">com</span>\n<span class=\"n\">cab</span><span class=\"vi\">@gmail</span><span class=\"p\">.</span><span class=\"nf\">com</span>\n<span class=\"n\">cba</span><span class=\"vi\">@gmail</span><span class=\"p\">.</span><span class=\"nf\">com</span>\n<span class=\"o\">&gt;&gt;&gt;</span></code></pre></figure>\n\n"
    } ,
  
    {

      "title"    : "Simple bash scripting for login before open the terminal",
      "category" : "",
      "date"     : "2016-04-19 17:49:21 +0530",
      "url"      : "/post/simple-bash-scripting-for-login-before-open-the-terminal/",
      "description" : "<p>Add this in your file of <code class=\"language-plaintext highlighter-rouge\">/etc/bash.bashrc</code>, makesure you logged in as root.</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-ruby\" data-lang=\"ruby\"><span class=\"c1\">### ===============================================</span>\n<span class=\"c1\">### Simple bash scripting for login before open the terminal.</span>\n<span class=\"c1\">### Credit: &lt;Summon Agus&gt; - agus@python.web.id</span>\n<span class=\"c1\">### Location, end script of: /etc/bash.bashrc</span>\n<span class=\"c1\">### ===============================================</span>\n\n<span class=\"k\">while</span> <span class=\"kp\">true</span><span class=\"p\">;</span> <span class=\"k\">do</span>\n  <span class=\"c1\"># Don't exit at Ctrl-C</span>\n  <span class=\"nb\">trap</span> <span class=\"s2\">\"echo\"</span> <span class=\"no\">SIGINT</span>\n\n  <span class=\"nb\">printf</span> <span class=\"s2\">\"</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span>\n  <span class=\"n\">echo</span> <span class=\"o\">-</span><span class=\"n\">n</span> <span class=\"s2\">\" Who are you guys? \"</span><span class=\"p\">;</span> <span class=\"n\">read</span> <span class=\"o\">-</span><span class=\"n\">s</span> <span class=\"nb\">name</span><span class=\"p\">;</span>\n  <span class=\"k\">if</span> <span class=\"p\">[</span> <span class=\"s2\">\"$name\"</span> <span class=\"o\">==</span> <span class=\"s2\">\"agus\"</span> <span class=\"p\">];</span> <span class=\"k\">then</span>\n    <span class=\"n\">reset</span>\n    <span class=\"nb\">printf</span> <span class=\"s2\">\"</span><span class=\"se\">\\n</span><span class=\"s2\"> Welcome my KING! you are the best!!</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span>\n    <span class=\"nb\">printf</span> <span class=\"s2\">\" \"</span><span class=\"p\">;</span> <span class=\"n\">date</span><span class=\"p\">;</span>\n    <span class=\"nb\">printf</span> <span class=\"s2\">\" Please start your activity with Basmalah</span><span class=\"se\">\\n\\n</span><span class=\"s2\">\"</span>\n    <span class=\"k\">break</span>\n  <span class=\"k\">else</span>\n    <span class=\"nb\">printf</span> <span class=\"s2\">\"</span><span class=\"se\">\\n</span><span class=\"s2\"> Heey you! why you here!! You are not owner of this machine!</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span>\n  <span class=\"n\">fi</span>\n<span class=\"n\">done</span>\n\n<span class=\"c1\">### ===============================================</span>\n<span class=\"c1\">### END</span>\n<span class=\"c1\">### ===============================================</span></code></pre></figure>\n"
    } ,
  
    {

      "title"    : "Remove all files .pyc with recrusive method",
      "category" : "",
      "date"     : "2016-04-19 13:09:34 +0530",
      "url"      : "/post/remove-all-files-pyc-with-recrusive-method/",
      "description" : "<p>This method simple but important. Example in your project dir is like this:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-ruby\" data-lang=\"ruby\"><span class=\"n\">project_dir</span><span class=\"o\">/</span>\n           <span class=\"n\">__init__</span><span class=\"p\">.</span><span class=\"nf\">py</span>\n           <span class=\"n\">__init__</span><span class=\"p\">.</span><span class=\"nf\">pyc</span>\n           <span class=\"n\">something</span><span class=\"p\">.</span><span class=\"nf\">py</span>\n           <span class=\"n\">something</span><span class=\"p\">.</span><span class=\"nf\">pyc</span>\n           <span class=\"o\">...</span>\n           <span class=\"n\">core</span><span class=\"o\">/</span>\n               <span class=\"n\">__init__</span><span class=\"p\">.</span><span class=\"nf\">py</span>\n               <span class=\"n\">__init__</span><span class=\"p\">.</span><span class=\"nf\">pyc</span>\n               <span class=\"n\">build</span><span class=\"p\">.</span><span class=\"nf\">py</span>\n               <span class=\"n\">build</span><span class=\"p\">.</span><span class=\"nf\">pyc</span></code></pre></figure>\n\n<p>Deleting the <code class=\"language-plaintext highlighter-rouge\">.pyc</code> files one by one would be spending a lot of time. and you will be bored. There is sample how to handle it.</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ find your_dir -name *.pyc -delete\n</code></pre></div></div>\n\n<p>OR, if you work inside current directory.</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ find . -name *.pyc -delete\n</code></pre></div></div>\n"
    } ,
  
    {

      "title"    : "Email BackEnd with SMTP Gmail",
      "category" : "",
      "date"     : "2016-04-19 00:58:15 +0530",
      "url"      : "/post/email-backend-with-smtp-gmail/",
      "description" : "<p>Add this configurations in your <code class=\"language-plaintext highlighter-rouge\">settings.py</code></p>\n\n<p>This configurations is if you work with <code class=\"language-plaintext highlighter-rouge\">smtp.gmail.com</code>, other smtp is similiar with configurations.</p>\n\n<ul>\n  <li>Unlock Captha: <a href=\"https://accounts.google.com/DisplayUnlockCaptcha\">https://accounts.google.com/DisplayUnlockCaptcha</a></li>\n  <li>Change to active: <a href=\"https://www.google.com/settings/security/lesssecureapps\">https://www.google.com/settings/security/lesssecureapps</a></li>\n</ul>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>EMAIL_HOST          = 'smtp.gmail.com'\nEMAIL_PORT          = 587\nEMAIL_HOST_USER     = 'your_gmail@gmail.com'\nEMAIL_HOST_PASSWORD = 'your_password'\nEMAIL_USE_TLS       = True\nDEFAULT_FROM_EMAIL  = EMAIL_HOST_USER\nEMAIL_BACKEND       = 'django.core.mail.backends.smtp.EmailBackend'\n</code></pre></div></div>\n"
    } ,
  
    {

      "title"    : "Welcome to Jekyll!",
      "category" : "",
      "date"     : "2013-02-19 19:58:15 +0530",
      "url"      : "/post/welcome1-to-jekyll/",
      "description" : "<p>You’ll find this post in your <code class=\"language-plaintext highlighter-rouge\">_posts</code> directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run <code class=\"language-plaintext highlighter-rouge\">jekyll serve</code>, which launches a web server and auto-regenerates your site when a file is updated.</p>\n\n<p>To add new posts, simply add a file in the <code class=\"language-plaintext highlighter-rouge\">_posts</code> directory that follows the convention <code class=\"language-plaintext highlighter-rouge\">YYYY-MM-DD-name-of-post.ext</code> and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.</p>\n\n<p>Jekyll also offers powerful support for code snippets:</p>\n\n<figure class=\"highlight\"><pre><code class=\"language-ruby\" data-lang=\"ruby\"><span class=\"k\">def</span> <span class=\"nf\">print_hi</span><span class=\"p\">(</span><span class=\"nb\">name</span><span class=\"p\">)</span>\n  <span class=\"nb\">puts</span> <span class=\"s2\">\"Hi, </span><span class=\"si\">#{</span><span class=\"nb\">name</span><span class=\"si\">}</span><span class=\"s2\">\"</span>\n<span class=\"k\">end</span>\n<span class=\"n\">print_hi</span><span class=\"p\">(</span><span class=\"s1\">'Tom'</span><span class=\"p\">)</span>\n<span class=\"c1\">#=&gt; prints 'Hi, Tom' to STDOUT.</span></code></pre></figure>\n\n<p>Check out the <a href=\"http://jekyllrb.com/docs/home\">Jekyll docs</a> for more info on how to get the most out of Jekyll. File all bugs/feature requests at <a href=\"https://github.com/jekyll/jekyll\">Jekyll’s GitHub repo</a>. If you have questions, you can ask them on <a href=\"https://talk.jekyllrb.com/\">Jekyll Talk</a>.</p>\n\n"
    } 
  
]